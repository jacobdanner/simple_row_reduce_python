## A simplistic row reduction utility for beginning linear algebra textbook problems 
## (typically whole numbers which row reduce to a "clean" solution).
## 
## Uses numpy and the Fraction type from the fractions module. 
## Module provides 1 public method: row_reduce() which takes a list of lists 
## or a numpy ndarray as an argument. Optionally users can request a ndarray as a 
## return type instead of the default (a Matrix of fractions in list form).

## examples:

import simple_row_reduce as srr
from numpy import array

x = [2,3,1,5, -1,0,1,-1, 2,1,-1,3]
x = array(x).reshape(3,4)

solution = srr.row_reduce(x,1) # get ndarray as return type

print(solution)


## prints:
## [[ 1.  0. -1.  1.]
## [ 0.  1.  1.  1.]
## [ 0.  0.  0.  0.]]

## altenatively:
solution = srr.row_reduce(x)
print(solution)

## prints:
## [[Fraction(1, 1), Fraction(0, 1), Fraction(-1, 1), Fraction(1, 1)], [Fraction(0,
##  1), Fraction(1, 1), Fraction(1, 1), Fraction(1, 1)], [Fraction(0, 1), Fraction(
## 0, 1), Fraction(0, 1), Fraction(0, 1)]]
